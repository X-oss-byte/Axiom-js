# caching pnpm deps: https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-data

name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AXIOM_TOKEN: ${{ secrets.TESTING_STAGING_E2E_TOKEN }}
  AXIOM_URL: ${{ secrets.TESTING_STAGING_API_URL }}
  AXIOM_ORG_ID: ${{ secrets.TESTING_STAGING_E2E_ORG_ID }}
  AXIOM_DATASET_SUFFIX: ${{ github.run_id }}
  PNPM_VERSION: 8.6.0

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 18.x
          - 19.x
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm build && pnpm build:esm
      - run: pnpm lint
      - run: pnpm test

  test-integration:
    name: Test (Integration)
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.head.repo.full_name == github.repository
    strategy:
      matrix:
        node:
          - 18.x
          - 19.x
      max-parallel: 1
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm build && pnpm build:esm
      - env:
          AXIOM_TOKEN: ${{ secrets.TESTING_STAGING_TOKEN }}
          AXIOM_URL: ${{ secrets.TESTING_STAGING_API_URL }}
          AXIOM_ORG_ID: ${{ secrets.TESTING_STAGING_ORG_ID }}
          AXIOM_DATASET_SUFFIX: ${{ github.run_id }}-${{ matrix.node }}
        run: pnpm integration

  deploy-e2e-apps:
    name: Deploy E2E apps
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - uses: actions/checkout@v4
      - uses: amondnet/vercel-action@v25 #deploy
        id: vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required
          scope: ${{ secrets.VERCEL_SCOPE }}
    outputs:
      preview-url: ${{ steps.vercel-deploy.outputs.preview-url }}
    environment:
      name: E2EPreview
      url: ${{ steps.vercel-deploy.outputs.preview-url }}

  test-e2e:
    name: E2E tests
    runs-on: ubuntu-latest
    needs:
      - deploy-e2e-apps
    if: github.event.pull_request.head.repo.full_name == github.repository
    strategy:
      matrix:
        node:
          - 18.x
      max-parallel: 1
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm build && pnpm build:esm # cjs build needed to run jest tests
      - env:
          TESTING_TARGET_URL: ${{ needs.deploy-e2e-apps.outputs.preview-url }}
        run: pnpm run e2e
